nodejs 공부

-정적인 파일은 서버 재기동 필요없이 수정하고 저장한 다음 새로고침하면 바로 적용가능

var express=require("express")
var app=express()



app.get('/',function(req,res){})
저 주소로 들어왔을때 함수 실행
이 함수안에 
var output=`<!DOCTYPE html>` 이런거 넣어서 html형식으로 내보낼 수 있음
Q. 그런데 이렇게 작성하는 거 말고 다른 html파일 실행하게 할 순 없나.너무 더러움
-> 우선 js에서 html 템플릿을 작성해서 하게되면 변수대입같은게 쉬워짐



app.use(express.static('public')
public 디렉토리 안의 정적 파일 실행
즉 주소창에 public안에 있는 파일을 검색하면 그 파일이 실행됨 -> html같은것도 가능
ex) localhost:3000/asd.html



템플릿 엔진
-> js에서 html을 렌더링하기 위해서 필요함
jade와 ejs가 대표적인데 우선 jade 이용
app.set('views','./파일경로')
app.set('view engine','jade')를 통해 jade 사용
 



쿼리스트링
-> 하나의 라우터를 통해서 여러개의 페이지를 만들 수 있음
ex) localhost:3000/topic?id=1
?이후로 쿼리스트링

get -> 서버에 있는 정보를 앱으로 가져옴
즉, app.get(`/url',function(req,res))를 하면
url로 접속했을 때 함수를 실행한다고 보면된다.


post -> 앱의 정보를 서버로 전달함
----------------------------------------------------------------
get 방식
<form action="/form_receiver>와 같이 action을 지정해주면 그곳으로 입력한 정보를 보냄(get 방식
form에서 input에 name을 지정해줌
app.get(`/form_receiver,functiono(req,res){})로 경로 지정해줌
그리고 req.query.{name}같은 걸로 값을 받아올수있음
-----------------------------------------------------------------
post방식
form에서 action과 함께 method를 post로 지정해줘야함
input에 name을 지정해주고
app.post('/form_receiver',function(req,res){}) 와 같이 app.post를 이용하면 가능해짐

그리고 req.body.{name}을 이용하면됨. 그런데 그냥 그대로 사용하면 사용이 불가능함 req에 해당 객체가 없기 때문
그래서 이걸 해결하기 위해서는 var bodyParser=require('body-parser')를 통해 req에서 body를 사용가능하게하는 플러그인을 사용해야함 (정확히는 미들웨어)
일정 버전 이상 node에서는 자동으로 깔려있음

var badyParser = require('body-parser')
app.use(bodyParser.urlencoded({extended:false})

-----------------------------------------------------------------------------------------------

    fs.writeFile('data/'+title,description,function(err){
        if (err){
            res.status(500).send('Internal sever Error')
            //500은 서버에러라는 뜻
        }
        res.send("HI,post "+title+' '+description);

여기서 err_http_headers_sent 오류가 발생하는데 send를 두번이나 해서 그런다
따라서 if문 안에 return res.status~로 적으면된다.

---------------------------------------------------------------------------------------
js에서 jade로 값 보내는 법

res.render('{jade파일 이름}', {객체 형식의 값})

-----------------------------------------------------------------------------------------

한 라우터 app.get에 여러개의 path를 넣을 수 있음
ex) app.get(['/topic','/topic/:id'], function(req,res){})










